{"mappings":"AAAA,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,2BAA2B,SAAS,cAAc,CAAC;AACzD,MAAM,kBAAkB,SAAS,cAAc,CAAC;AAChD,MAAM,uBAAuB,SAAS,cAAc,CAAC;AAErD,IAAI,mBAAmB;AAEvB,YAAY,gBAAgB,CAAC,SAAS;AACtC,WAAW,gBAAgB,CAAC,SAAS;IACnC;IACA;AACF;AAEA,SAAS;IACP,YAAY,SAAS,CAAC,GAAG,CAAC;IAC1B,oBAAoB,UAAU,IAAI,CAAC,IAAM,KAAK,MAAM,KAAK;IACzD,uBAAuB;IACvB,yBAAyB,SAAS,CAAC,MAAM,CAAC;IAC1C;AACF;AAEA,SAAS;IACP;IACA,aAAa,iBAAiB,CAAC,qBAAqB;AACtD;AAEA,SAAS,aAAa,QAAQ;IAC5B,gBAAgB,SAAS,GAAG,SAAS,QAAQ;IAC7C,SAAS,OAAO,CAAC,OAAO,CAAC,CAAA;QACvB,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,SAAS,GAAG,OAAO,IAAI;QAC9B,OAAO,SAAS,CAAC,GAAG,CAAC;QACrB,IAAI,OAAO,OAAO,EAChB,OAAO,OAAO,CAAC,OAAO,GAAG,OAAO,OAAO;QAEzC,OAAO,gBAAgB,CAAC,SAAS;QACjC,qBAAqB,WAAW,CAAC;IACnC;AACF;AAEA,SAAS;IACP,iBAAiB,SAAS,IAAI;IAC9B,WAAW,SAAS,CAAC,GAAG,CAAC;IACzB,MAAO,qBAAqB,UAAU,CACpC,qBAAqB,WAAW,CAAC,qBAAqB,UAAU;AAEpE;AAEA,SAAS,aAAa,CAAC;IACrB,MAAM,iBAAiB,EAAE,MAAM;IAC/B,MAAM,UAAU,eAAe,OAAO,CAAC,OAAO;IAC9C,eAAe,SAAS,IAAI,EAAE;IAC9B,MAAM,IAAI,CAAC,qBAAqB,QAAQ,EAAE,OAAO,CAAC,CAAA;QAChD,eAAe,QAAQ,OAAO,OAAO,CAAC,OAAO;IAC/C;IACA,IAAI,kBAAkB,MAAM,GAAG,uBAAuB,GACpD,WAAW,SAAS,CAAC,MAAM,CAAC;SACvB;QACL,YAAY,SAAS,GAAG;QACxB,YAAY,SAAS,CAAC,MAAM,CAAC;IAC/B;AACF;AAEA,SAAS,eAAe,OAAO,EAAE,OAAO;IACtC,iBAAiB;IACjB,IAAI,SACF,QAAQ,SAAS,CAAC,GAAG,CAAC;SAEtB,QAAQ,SAAS,CAAC,GAAG,CAAC;AAE1B;AAEA,SAAS,iBAAiB,OAAO;IAC/B,QAAQ,SAAS,CAAC,MAAM,CAAC;IACzB,QAAQ,SAAS,CAAC,MAAM,CAAC;AAC3B;AAEA,MAAM,YAAY;IAChB;QACE,UAAU;QACV,SAAS;YACP;gBAAE,MAAM;gBAAK,SAAS;YAAK;YAC3B;gBAAE,MAAM;gBAAM,SAAS;YAAM;SAC9B;IACH;IACA;QACE,UAAU;QACV,SAAS;YACP;gBAAE,MAAM;gBAAsB,SAAS;YAAK;YAC5C;gBAAE,MAAM;gBAAkB,SAAS;YAAK;YACxC;gBAAE,MAAM;gBAAU,SAAS;YAAK;YAChC;gBAAE,MAAM;gBAAoB,SAAS;YAAK;SAC3C;IACH;IACA;QACE,UAAU;QACV,SAAS;YACP;gBAAE,MAAM;gBAAU,SAAS;YAAK;YAChC;gBAAE,MAAM;gBAAO,SAAS;YAAM;YAC9B;gBAAE,MAAM;gBAAU,SAAS;YAAM;YACjC;gBAAE,MAAM;gBAAU,SAAS;YAAM;SAClC;IACH;IACA;QACE,UAAU;QACV,SAAS;YACP;gBAAE,MAAM;gBAAK,SAAS;YAAK;YAC3B;gBAAE,MAAM;gBAAK,SAAS;YAAM;SAC7B;IACH;CACD","sources":["App.js"],"sourcesContent":["const startButton = document.getElementById('start-btn')\r\nconst nextButton = document.getElementById('next-btn')\r\nconst questionContainerElement = document.getElementById('question-container')\r\nconst questionElement = document.getElementById('question')\r\nconst answerButtonsElement = document.getElementById('answer-buttons')\r\n\r\nlet shuffledQuestions, currentQuestionIndex\r\n\r\nstartButton.addEventListener('click', startGame)\r\nnextButton.addEventListener('click', () => {\r\n  currentQuestionIndex++\r\n  setNextQuestion()\r\n})\r\n\r\nfunction startGame() {\r\n  startButton.classList.add('hide')\r\n  shuffledQuestions = questions.sort(() => Math.random() - .5)\r\n  currentQuestionIndex = 0\r\n  questionContainerElement.classList.remove('hide')\r\n  setNextQuestion()\r\n}\r\n\r\nfunction setNextQuestion() {\r\n  resetState()\r\n  showQuestion(shuffledQuestions[currentQuestionIndex])\r\n}\r\n\r\nfunction showQuestion(question) {\r\n  questionElement.innerText = question.question\r\n  question.answers.forEach(answer => {\r\n    const button = document.createElement('button')\r\n    button.innerText = answer.text\r\n    button.classList.add('btn')\r\n    if (answer.correct) {\r\n      button.dataset.correct = answer.correct\r\n    }\r\n    button.addEventListener('click', selectAnswer)\r\n    answerButtonsElement.appendChild(button)\r\n  })\r\n}\r\n\r\nfunction resetState() {\r\n  clearStatusClass(document.body)\r\n  nextButton.classList.add('hide')\r\n  while (answerButtonsElement.firstChild) {\r\n    answerButtonsElement.removeChild(answerButtonsElement.firstChild)\r\n  }\r\n}\r\n\r\nfunction selectAnswer(e) {\r\n  const selectedButton = e.target\r\n  const correct = selectedButton.dataset.correct\r\n  setStatusClass(document.body, correct)\r\n  Array.from(answerButtonsElement.children).forEach(button => {\r\n    setStatusClass(button, button.dataset.correct)\r\n  })\r\n  if (shuffledQuestions.length > currentQuestionIndex + 1) {\r\n    nextButton.classList.remove('hide')\r\n  } else {\r\n    startButton.innerText = 'Restart'\r\n    startButton.classList.remove('hide')\r\n  }\r\n}\r\n\r\nfunction setStatusClass(element, correct) {\r\n  clearStatusClass(element)\r\n  if (correct) {\r\n    element.classList.add('correct')\r\n  } else {\r\n    element.classList.add('wrong')\r\n  }\r\n}\r\n\r\nfunction clearStatusClass(element) {\r\n  element.classList.remove('correct')\r\n  element.classList.remove('wrong')\r\n}\r\n\r\nconst questions = [\r\n  {\r\n    question: 'What is 2 / 2?',\r\n    answers: [\r\n      { text: '0', correct: true },\r\n      { text: '22', correct: false }\r\n    ]\r\n  },\r\n  {\r\n    question: 'Who is the best YouTuber?',\r\n    answers: [\r\n      { text: 'Web Dev Simplified', correct: true },\r\n      { text: 'Traversy Media', correct: true },\r\n      { text: 'Dev Ed', correct: true },\r\n      { text: 'Fun Fun Function', correct: true }\r\n    ]\r\n  },\r\n  {\r\n    question: 'what is the best in the world?',\r\n    answers: [\r\n      { text: 'mother', correct: true },\r\n      { text: 'non', correct: false },\r\n      { text: 'father', correct: false },\r\n      { text: 'friend', correct: false }\r\n    ]\r\n  },\r\n  {\r\n    question: 'What is 4 + 2?',\r\n    answers: [\r\n      { text: '6', correct: true },\r\n      { text: '8', correct: false }\r\n    ]\r\n  }\r\n]"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}